---
ops: [train, evaluate]
model: {
    # TODO: update this line with the absolute path to the file.
    path: ../py_file/model.py,
    class: model_name,
    class_args: {
        sequence_length: 1000,
        n_targets: 24,
    },
    non_strand_specific: mean
}
sampler: !obj:selene_sdk.samplers.IntervalsSampler {
    reference_sequence: !obj:selene_sdk.sequences.Genome {
        # we include relative paths here, but we recommend using absolute
        # paths for future configuration files
        input_path: ../data/NIPP.fasta
    },
    features: !obj:selene_sdk.utils.load_features_list {
        input_path: ../data/distinct_features.txt
    },
    target_path: ../data/true_sorted_nip_24.bed.gz,
    intervals_path: ../data/nip_genome_interval.bed,
    seed: 127,
    # A positive example is an 1000bp sequence with at least 1 class/feature annotated to it.
    # A negative sample has no classes/features annotated to the sequence.
    sample_negative: True,
    sequence_length: 1000,
    center_bin_to_predict: 200,
    test_holdout: [chr05, chr10],
    validation_holdout: [chr04, chr08],
    # The feature must take up 50% of the bin (200bp) for it to be considered
    # a feature annotated to that sequence.
    feature_thresholds: 0.5,
    mode: train,
    save_datasets: [validate, test]
}
train_model: !obj:selene_sdk.TrainModel {
    batch_size: 256  ,
    max_steps: 30000,  # update this value for longer training
    report_stats_every_n_steps: 500,
    n_validation_samples: 30000,
    n_test_samples: 30000,
    cpu_n_threads: 16,
    use_cuda: True,  # TODO: update this if CUDA is not on your machine
    data_parallel: True
}
random_seed: 147
output_dir: ../model/model_save_path
create_subdirectory: False
load_test_set: False
...
